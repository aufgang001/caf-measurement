#!/bin/bash
if [[ $(id -u) != 0 ]]; then
  echo "you need to be root"
  exit 0
fi

CAF_HOME="/users/localadmin/woelke/actor-framework"
BENCH_USER="localadmin"
OUT_DIR="/users/localadmin/woelke/test_data"
BIN_PATH="${CAF_HOME}/build/bin"
CAF_INI_FILE="caf-application.ini"
REPITITIONS=1

# Define benchmarks to run
todo_array="stealing numa-steal"
declare -A bench_array
#bench_array["bencherl_01_bang"]="intermediate 50"
#bench_array["bencherl_02_big"]="intermediate 100"
#bench_array["bencherl_03_ehb"]="intermediate 100"
#bench_array["bencherl_05_genstress"]="intermediate 100"
#bench_array["bencherl_06_mbrot"]="intermediate 100"
#bench_array["bencherl_08_parallel"]="intermediate 100"
#bench_array["bencherl_10_ran"]="intermediate 400"
#bench_array["bencherl_11_serialmsg"]="intermediate 50" #attantion!! very memory consuming, 20GB+ required
bench_array["bencherl_12_timer_wheel"]="intermediate 50 no_wheel;no_wheel" #behavior with timeout
bench_array["bencherl_12_timer_wheel"]="intermediate 50 wheel;wheel" #behavior without timeout

set_args_and_suffix() {
  IFS=';' read -ra ARGS_SUFFIX <<< "${bench_array[$1]}"
  args=${ARGS_SUFFIX[0]}
  suffix=${ARGS_SUFFIX[1]}
  todo=$2
  if [ "$suffix" == "" ]; then
    suffix=${todo}
  else
    if [ "$todo" == "" ]; then
      suffix=${suffix}
    else
      suffix=${todo}-${suffix}
    fi
  fi
}

# Preperation
rm -f ${OUT_DIR}/*
cd ${CAF_HOME}/benchmarks/scripts

# Run benchmark suite
for bench in ${!bench_array[@]} ; do
for todo in $todo_array ; do
cat >${BIN_PATH}/${CAF_INI_FILE} <<EOL
[scheduler]
policy='$todo'
[numa]
neighborhood-level=2
EOL
  set_args_and_suffix $bench $todo
  ./caf_run_benchmarks default $BENCH_USER $OUT_DIR --label=caf --bench=${bench} --repetitions=${REPITITIONS} --custom-args="${args}" --label-suffix=${suffix}
done
done

for bench in ${!bench_array[@]} ; do
  set_args_and_suffix $bench
  if [ "$suffix" == "" ]; then
    ./caf_run_benchmarks default $BENCH_USER $OUT_DIR --label=caf --bench=${bench} --repetitions=${REPITITIONS} --custom-args="${args}"
  else
    ./caf_run_benchmarks default $BENCH_USER $OUT_DIR --label=caf --bench=${bench} --repetitions=${REPITITIONS} --custom-args="${args}" --label-suffix=${suffix}
  fi
done

# Create csv files
cd $OUT_DIR
${BIN_PATH}/to_csv *

duration=$SECONDS
echo "duration: $(($duration / 3600))h $((($duration / 60) % 60))m $(($duration % 60))s"
