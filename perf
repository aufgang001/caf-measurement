#!/bin/bash
if [[ $(id -u) == 0 ]]; then
  echo "Do not start this script as root"
  exit 0
fi

CAF_HOME="/users/localadmin/woelke/actor-framework"
BENCH_USER="localadmin"
FLAME_GRAPH_PATH="/users/localadmin/woelke/FlameGraph"
BIN_PATH="${CAF_HOME}/build/bin"
OUT_DIR="/users/localadmin/woelke/test_data"
CAF_INI_FILE="caf-application.ini"

#todo_array="stealing numa-steal"
todo="numa-steal"
bench="savina_01_pingpong"
args="-n 400000"

PERF_FILE="${OUT_DIR}/${bench}-perf.data"
STACK_FILE="${OUT_DIR}/${bench}-stack.data"
SVG_FILE="${OUT_DIR}/${bench}-flamegraph.svg"

if [ "$1" != "run" ] && [ "$1" != "flamegraph" ]; then
  echo "run $0 <run|flamegrpah>"
  echo "program stopped!"
fi

if [ "$1" == "run" ]; then
cat >${BIN_PATH}/${CAF_INI_FILE} <<EOL
[scheduler]
policy='$todo'
[numa]
neighborhood-level=2
EOL
  rm -f ${OUT_DIR}/*
  sudo sh -c "echo 0 > /proc/sys/kernel/kptr_restrict" 
  cd $BIN_PATH
  sudo perf record -g --output=$PERF_FILE -- ./${bench} ${args}
  sudo sh -c "echo 1 > /proc/sys/kernel/kptr_restrict" 
fi

if [ "$1" == "flamegraph" ]; then
  sudo chown localadmin $PERF_FILE
  cd $FLAME_GRAPH_PATH
  perf script --input=$PERF_FILE | ./stackcollapse-perf.pl > $STACK_FILE
  ./flamegraph.pl $STACK_FILE > $SVG_FILE
fi

duration=$SECONDS
echo "duration: $(($duration / 3600))h $((($duration / 60) % 60))m $(($duration % 60))s"

# --notes:
# perf report --call-graph -G
