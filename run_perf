#!/bin/bash
if [[ $(id -u) == 0 ]]; then
  echo "Do not start this script as root"
  exit 0
fi

#CAF_HOME="/home/woelke/spideroak/working_dir/caf/actor-framework"
#FLAME_GRAPH_PATH="/home/woelke/spideroak/working_dir/caf/profiling/FlameGraph"
#BIN_PATH="${CAF_HOME}/build/bin"
#OUT_DIR="/home/woelke/spideroak/working_dir/caf/profiling"
#CAF_INI_FILE="caf-application.ini"

CAF_HOME="/users/localadmin/woelke/actor-framework"
BENCH_USER="localadmin"
FLAME_GRAPH_PATH="/users/localadmin/woelke/FlameGraph"
BIN_PATH="${CAF_HOME}/build/bin"
OUT_DIR="/users/localadmin/woelke/test_data"
CAF_INI_FILE="caf-application.ini"


# Preperation
echo "Info: CAF should be compiled in debug mode"
sudo sh -c "echo 0 > /proc/sys/kernel/kptr_restrict" 
rm -f ${OUT_DIR}/*

# Define records to do
#todo_array="stealing numa-steal"
todo_array="numa-steal"
declare -A bench_array
#bench_array["bencherl_01_bang"]="intermediate 50"
bench_array["savina_01_pingpong"]="-n 1200000"

set_bench_and_suffix() {
  IFS=';' read -ra ARGS_SUFFIX <<< "$1"
  bench=${ARGS_SUFFIX[0]}
  suffix=${ARGS_SUFFIX[1]}
  todo=$2
  if [ "$suffix" == "" ]; then
    suffix=${todo}
  else
    if [ "$todo" != "" ]; then
      suffix=${todo}-${suffix}
    fi
  fi
}

for bench_suffix in ${!bench_array[@]} ; do
for todo in $todo_array ; do
cat >${BIN_PATH}/${CAF_INI_FILE} <<EOL
[scheduler]
policy='$todo'
[numa]
neighborhood-level=2
EOL
  set_bench_and_suffix $bench_suffix $todo
  PERF_FILE="${OUT_DIR}/${bench}-${suffix}-perf.data"
  STACK_FILE="${OUT_DIR}/${bench}-${suffix}-stack.data"
  SVG_FILE="${OUT_DIR}/${bench}-${suffix}-flamegraph.svg"

  # record perf data
  cd $BIN_PATH
  sudo perf record --call-graph --output=$PERF_FILE -- ./${bench} ${bench_array[$bench_suffix]}
  sudo chown localadmin $PERF_FILE

  # Convert perf data to svg
  cd $FLAME_GRAPH_PATH
  perf script --input=$PERF_FILE | ./stackcollapse-perf.pl > $STACK_FILE
  ./flamegraph.pl $STACK_FILE > $SVG_FILE
done
done

# clean up
sudo sh -c "echo 1 > /proc/sys/kernel/kptr_restrict" 

duration=$SECONDS
echo "duration: $(($duration / 3600))h $((($duration / 60) % 60))m $(($duration % 60))s"


# --notes:
# perf report --call-graph -G
